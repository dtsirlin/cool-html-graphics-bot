// Generated by CoffeeScript 1.6.2
/*
	rgba cycling by offset sin(time)
*/


(function() {
  var Configuration, FRAME, NOW, PI, TIME, abs, animloop, between, clear, cos, degToRad, hsla, hyp, initGui, radToDeg, rainbowCircle, rgba, sin, tan;

  TIME = 0;

  NOW = Date.now();

  FRAME = 0;

  PI = Math.PI;

  sin = function(a) {
    return Math.sin(a);
  };

  cos = function(a) {
    return Math.cos(a);
  };

  tan = function(a) {
    return Math.tan(a);
  };

  abs = function(a) {
    return Math.abs(a);
  };

  hyp = function(a, b) {
    return Math.sqrt(a * a + b * b);
  };

  radToDeg = function(rad) {
    return rad / (Math.PI / 180);
  };

  degToRad = function(deg) {
    return deg * (Math.PI / 180);
  };

  between = function(min, x, max) {
    return Math.min(Math.max(x, min), max);
  };

  rgba = function(r, g, b, a) {
    if (r == null) {
      r = 255;
    }
    if (g == null) {
      g = 0;
    }
    if (b == null) {
      b = 255;
    }
    if (a == null) {
      a = 1;
    }
    r = between(0, r | 0, 255);
    g = between(0, g | 0, 255);
    b = between(0, b | 0, 255);
    a = between(0, a, 1);
    return "rgba( " + r + ", " + g + ", " + b + ", " + a + ")";
  };

  hsla = function(h, s, l, a) {
    if (h == null) {
      h = 0;
    }
    if (s == null) {
      s = 100;
    }
    if (l == null) {
      l = 50;
    }
    if (a == null) {
      a = 1;
    }
    h = (h | 0) % 360;
    s = between(0, s, 100);
    l = between(0, l, 100);
    a = between(0, a, 1);
    return "hsla(" + h + ", " + s + "%, " + l + "%, " + a + ")";
  };

  clear = function(context) {
    return context.clearRect(context.canvas.left, context.canvas.top, context.canvas.width, context.canvas.height);
  };

  window.rainbow = function(a, offset) {
    var b, g, r;

    if (offset == null) {
      offset = 1;
    }
    r = sin(a + (0 + cfg.offset_1) * PI / 3 * offset) * 127 + 128;
    g = sin(a + (2 + cfg.offset_2) * PI / 3 * offset) * 127 + 128;
    b = sin(a + (4 + cfg.offset_3) * PI / 3 * offset) * 127 + 128;
    return rgba(r, g, b, 1);
  };

  rainbowCircle = function() {
    var i, j, speed, square_height, square_width, x, x_adj, y, y_adj, _i, _ref, _ref1, _results;

    square_height = hyp(canvas.height, canvas.width) / cfg.size;
    square_width = square_height;
    _results = [];
    for (i = _i = _ref = canvas.left, _ref1 = canvas.right + square_width; square_width > 0 ? _i <= _ref1 : _i >= _ref1; i = _i += square_width) {
      _results.push((function() {
        var _j, _ref2, _ref3, _results1;

        _results1 = [];
        for (j = _j = _ref2 = canvas.top, _ref3 = canvas.bottom + square_height; square_height > 0 ? _j <= _ref3 : _j >= _ref3; j = _j += square_height) {
          speed = TIME * 1 / 60 * cfg.speed;
          x_adj = cos(i * cfg.x_a / canvas.width - cfg.m_sens * Mouse.x / canvas.width + TIME * -cfg.h_speed);
          y_adj = cos(j * cfg.y_a / canvas.height + cfg.m_sens * Mouse.y / canvas.height + TIME * -cfg.v_speed);
          ctx.fillStyle = rainbow(speed - x_adj - y_adj, cfg.sat * -sin(x_adj + y_adj));
          x = i;
          y = j + sin(j * cfg.w_2 - i * cfg.w_1 + speed * cfg.w_s) * square_width / 2;
          ctx.beginPath();
          ctx.arc(x, y, square_width / 2 - 1, 0, 2 * PI, true);
          ctx.closePath();
          _results1.push(ctx.fill());
        }
        return _results1;
      })());
    }
    return _results;
  };

  animloop = function() {
    requestAnimationFrame(animloop);
    FRAME++;
    TIME += (Date.now() - NOW) / 1000 * 60 | 0;
    NOW = Date.now();
    clear(ctx);
    return rainbowCircle();
  };

  Configuration = function() {
    return {
      size: 24,
      m_sens: 0,
      offset_1: 3.1,
      offset_2: 1.7,
      offset_3: 1.9,
      speed: 1,
      h_speed: 0.012,
      v_speed: 0.012,
      x_a: -1.39,
      y_a: 1,
      sat: 1,
      w_1: 0.005952740243042473,
      w_2: 0.002169469383512,
      w_s: 1
    };
  };

  window.cfg = new Configuration();

  initGui = function() {
    var gui;

    gui = new dat.GUI();
    gui.close();
    dat.GUI.toggleHide();
    gui.add(cfg, 'size', 1, 128);
    gui.add(cfg, 'w_1', -PI / 90, PI / 90);
    gui.add(cfg, 'w_2', -PI / 90, PI / 90);
    gui.add(cfg, 'w_s', 0, 2);
    gui.add(cfg, 'x_a', -30, 30);
    gui.add(cfg, 'y_a', -30, 30);
    gui.add(cfg, 'h_speed', -1 / 20, 1 / 20);
    gui.add(cfg, 'v_speed', -1 / 20, 1 / 20);
    gui.add(cfg, 'speed', 0, 12);
    gui.add(cfg, 'sat', 0, 1);
    gui.add(cfg, 'offset_1', 0, PI);
    gui.add(cfg, 'offset_2', 0, PI);
    return gui.add(cfg, 'offset_3', 0, PI);
  };

  window.onload = function() {
    initGui();
    return animloop();
  };

}).call(this);

/*
//@ sourceMappingURL=05.map
*/
